name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  lint:
    runs-on: windows-latest  # Use Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Lint
        run: .\gradlew lintDebug  # Use Windows-style command

      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: lint.html
          path: app\build\reports\lint-results-debug.html  # Windows-style path

  unit-test:
    needs: [lint]  # This makes the 'unit-test' job depend on the 'lint' job
    runs-on: windows-latest  # Use Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run unit tests
        run: .\gradlew testDebugUnitTest  # Run unit tests specifically on Windows

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: app\build\reports\tests\testDebugUnitTest\index.html  # Path to unit test report


  instrumentation-test:
    needs: [ unit-test ]
    runs-on: macos-latest  # or ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Android SDK
        run: |
          # Install Android SDK if not already done
          mkdir -p $ANDROID_SDK_ROOT
          curl -s https://dl.google.com/android/repository/commandlinetools-mac-7583922_latest.zip -o sdk-tools.zip
          unzip sdk-tools.zip -d $ANDROID_SDK_ROOT
          rm sdk-tools.zip
          yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager "platform-tools" "emulator" "system-images;android-29;google_apis;x86_64"

      - name: Start Emulator
        run: |
          echo "Starting the emulator..."
          $ANDROID_SDK_ROOT/emulator/emulator -avd testAVD -no-window -noaudio -no-boot-anim -gpu swiftshader_indirect &
          echo "Waiting for emulator to boot..."
          adb -s emulator-5554 wait-for-device
          adb shell getprop sys.boot_completed

      - name: Run Instrumentation Tests
        run: |
          adb -s emulator-5554 shell am instrument -w com.example.test/androidx.test.runner.AndroidJUnitRunner

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/index.html