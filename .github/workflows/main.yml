name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
#  lint:
#    runs-on: windows-latest  # Use Windows runner for linting
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Run Lint
#        run: .\gradlew lintDebug  # Use Windows-style command
#
#      - name: Upload lint report
#        uses: actions/upload-artifact@v3
#        with:
#          name: lint.html
#          path: app\build\reports\lint-results-debug.html  # Windows-style path
#
#  unit-test:
#    needs: [lint]  # This makes the 'unit-test' job depend on the 'lint' job
#    runs-on: windows-latest  # Use Windows runner for unit tests
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Run unit tests
#        run: .\gradlew testDebugUnitTest  # Run unit tests specifically on Windows
#
#      - name: Upload test reportgradle -v
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-report
#          path: app\build\reports\tests\testDebugUnitTest\index.html  # Path to unit test report



  instrumentation-test:
#    needs: [ unit-test ]
      name: Run UI Tests
      runs-on: macos-latest
      timeout-minutes: 20
      strategy:
        fail-fast: true
        matrix:
          api-level: [ 21, 23, 29 ]

      steps:
        - name: Checkout the code
          uses: actions/checkout@v2

        - name: set up JDK
          uses: actions/setup-java@v2
          with:
            distribution: 'adopt'
            java-version: 11


        - name: Make gradlew executable
          run: chmod +x ./gradlew

        - name: Copy CI gradle.properties
          run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

        - name: Gradle cache
          uses: actions/cache@v2
          continue-on-error: true # continue if the cache restore/upload fails
          with:
            path: |
              ~/.gradle/caches/modules-*
              ~/.gradle/caches/jars-*
              ~/.gradle/caches/build-cache-*
            key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

        - name: AVD cache
          uses: actions/cache@v2
          id: avd-cache
          with:
            path: |
              ~/.android/avd/*
              ~/.android/adb*
            key: avd-${{ matrix.api-level }}

        - name: create AVD and generate snapshot for caching
          if: steps.avd-cache.outputs.cache-hit != 'true'
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: ${{ matrix.api-level }}
            force-avd-creation: false
            emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            disable-animations: false
            script: echo "Generated AVD snapshot for caching."

        - name: run kaspresso tests
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: ${{ matrix.api-level }}
            force-avd-creation: false
            emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            disable-animations: true
            script: ./gradlew connectedCheck --stacktrace

        - name: Upload test report
          uses: actions/upload-artifact@v2
          with:
            name: instrumentation_test_report
            path: app/build/reports/androidTests/connected/
          if: always()